{"version":3,"sources":["components/Square.jsx","components/Board.jsx","components/Game.jsx","index.jsx"],"names":["Square","_ref","onClick","value","react_default","a","createElement","type","className","Board","idx","_this$props","this","props","squares","components_Square","renderSquare","React","Component","Game","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","history","Array","fill","stepNumber","xIsNext","i","_this$state","hist","slice","length","calculateWinner","setState","concat","step","status","_this2","_this$state2","current","winner","moves","map","move","desc","key","jumpTo","turn","components_Board","handleClick","lines","_lines$i","slicedToArray","b","c","ReactDOM","render","Game_Game","document","getElementById"],"mappings":"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","file":"static/js/main.c6d14537.chunk.js","sourcesContent":["import React from 'react';\nimport { func, string } from 'prop-types';\n\nfunction Square({ onClick, value }) {\n  return (\n    <button\n      type=\"button\"\n      className=\"square\"\n      onClick={onClick}\n    >\n      {value}\n    </button>\n  );\n}\n\nSquare.propTypes = {\n  onClick: func.isRequired,\n  value: string.isRequired,\n};\n\nexport default Square;\n","import React from 'react';\nimport PropTypes, { func } from 'prop-types';\n\nimport Square from './Square';\n\nclass Board extends React.Component {\n  renderSquare(idx) {\n    const { squares, onClick } = this.props;\n    return (\n      <Square\n        value={squares[idx]}\n        onClick={() => onClick(idx)}\n      />\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nBoard.propTypes = {\n  squares: PropTypes.isRequired,\n  onClick: func.isRequired,\n};\n\nexport default Board;\n","import React from 'react';\nimport Board from './Board';\n\nexport default class Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const { xIsNext, stepNumber, history } = this.state;\n    const hist = history.slice(\n      0,\n      stepNumber + 1,\n    );\n    const current = hist[hist.length - 1];\n    const squares = current.squares.slice();\n    // returns early if square has been clicked or game won\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = (xIsNext) ? 'X' : 'O';\n    this.setState({\n      history: hist.concat([{\n        squares,\n      }]),\n      stepNumber: hist.length,\n      xIsNext: !xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n    const { history, stepNumber, xIsNext } = this.state;\n    const current = history[stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        `Go to move #${move}` :\n        'Go to game start';\n      const key = move + 1;\n      return (\n        <li key={key}>\n          <button\n            type=\"button\"\n            onClick={() => this.jumpTo(move)}\n          >\n            {desc}\n          </button>\n        </li>\n      );\n    });\n    const turn = (xIsNext) ? 'X' : 'O';\n    let status;\n    if (winner) {\n      status = `Winner: ${winner}`;\n    } else {\n      status = `Next player: ${turn}`;\n    }\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i += 1) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Game from './components/Game';\nimport './index.css';\n\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}